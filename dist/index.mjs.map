{"version":3,"sources":["../src/index.ts","../src/adapters/Scriptable.ts","../src/adapters/Browser.ts"],"sourcesContent":["\n// Github repo located at https://github.com/stephen-j-oleary/Saab\n\nimport { match, MatchFunction } from \"path-to-regexp\";\nimport { Adapter } from \"./adapters/types\";\n\nexport { ScriptableWebViewAdapter } from \"./adapters/Scriptable\";\nexport { BrowserAdapter } from \"./adapters/Browser\";\n\n\ntype HandlerFunc = (req: any, res: any) => Promise<void>;\n\ntype Handler = {\n  method: string | null,\n  path: string,\n  pathMatcher: MatchFunction<Partial<Record<string, string | string[]>>>,\n  handler: HandlerFunc,\n}\n\ntype Saab = {\n  use: (path: string, handler: HandlerFunc) => void,\n  get: (path: string, handler: HandlerFunc) => void,\n  post: (path: string, handler: HandlerFunc) => void,\n  patch: (path: string, handler: HandlerFunc) => void,\n  put: (path: string, handler: HandlerFunc) => void,\n  delete: (path: string, handler: HandlerFunc) => void,\n  listen: (js?: string) => Promise<any>,\n}\n\n\nexport default function Saab(adapter: Adapter) {\n  let isConfigured = false;\n  const handlers: Handler[] = [];\n\n  async function config() {\n    await adapter.runInContext(`\n      window.saab = {\n        randomCounter: 0,\n        requests: [],\n        randomUUID() {\n          const incrementCounter = () => String(++this.randomCounter);\n\n          const randomizeTime = () => String(Date.now());\n\n          const randomizeNumbers = () => {\n            let text = String(Math.random());\n            for (let i = text.length; i < 19; ++i) {\n              text += \"0\";\n            }\n            return text.substring(2, 19);\n          }\n\n          return incrementCounter() + \"-\" + randomizeTime() + \"-\" + randomizeNumbers();\n        },\n        async request(config) {\n          const id = this.randomUUID();\n          let resolve, reject;\n          const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n          });\n\n          config.path = config.path.replace(/^\\\\/?/, \"/\"); // Add leading slash to request\n\n          // Create a global callback for scriptable to resolve or reject the promise\n          await this.createRequest({ id, config, resolve, reject });\n\n          // Wait for promise to be resolved\n          const response = await promise;\n\n          return response;\n        },\n        async get(path, payload = {}, config = {}) {\n          return this.request({\n            method: \"get\",\n            path,\n            payload,\n            ...config\n          });\n        },\n        async post(path, payload = {}, config = {}) {\n          return this.request({\n            method: \"post\",\n            path,\n            payload,\n            ...config\n          });\n        },\n        async patch(path, payload = {}, config = {}) {\n          return this.request({\n            method: \"patch\",\n            path,\n            payload,\n            ...config\n          });\n        },\n        async put(path, payload = {}, config = {}) {\n          return this.request({\n            method: \"put\",\n            path,\n            payload,\n            ...config\n          });\n        },\n        async delete(path, payload = {}, config = {}) {\n          return this.request({\n            method: \"delete\",\n            path,\n            payload,\n            ...config\n          });\n        },\n        async createRequest(config) {\n          this.requests.push(config);\n\n          if (!this.requests.length) return;\n\n          completion({\n            id: this.requests[0].id,\n            ...this.requests[0].config,\n          });\n        },\n        callback(id, err, data) {\n          const { resolve, reject } = this.requests.find(item => item.id === id);\n\n          if (err) reject(err);\n          else resolve(data);\n\n          this.requests = this.requests.filter(item => item.id !== id);\n\n          // Call the next queued request\n          if (!this.requests.length) return;\n          completion({\n            id: this.requests[0].id,\n            ...this.requests[0].config,\n          });\n        }\n      };\n      completion();\n    `);\n    isConfigured = true;\n    return;\n  }\n\n  function addHandler(method: string | null, path: string, handler: HandlerFunc) {\n    const pathMatcher = match(path);\n    handlers.push({\n      method,\n      path,\n      pathMatcher,\n      handler\n    });\n  }\n\n  function findMatchingHandler({ method, path }: { method?: string, path?: string }) {\n    if (!method || !path) return null;\n    const matchingHandlers = handlers.flatMap(h => {\n      if (h.method && h.method !== method) return []; // Method didnt match\n      const { params } = h.pathMatcher(path) || {}; // Paths that dont match will default to an empty object to avoid a destructuring error\n      if (!params) return []; // Path didnt match\n      return [{ ...h, params }];\n    });\n    return matchingHandlers[0] || null;\n  }\n\n  // Listens for dispatch events from the WebView\n  async function listen(js = \"\") {\n    if (!isConfigured) await config();\n\n    const { id, ...req } = await adapter.runInContext(js) || {};\n\n    const res = {\n      error: (error: unknown) => {\n        listen(`window.saab.callback(\"${id}\", ${JSON.stringify(error instanceof Error ? error.message : error)}, undefined)`);\n      },\n      send: (data: unknown) => {\n        listen(`window.saab.callback(\"${id}\", undefined, ${data})`);\n      },\n      json: (data: unknown) => {\n        listen(`window.saab.callback(\"${id}\", undefined, ${JSON.stringify(data)})`);\n      }\n    };\n\n    const { handler, params } = findMatchingHandler(req) || {};\n    if (!handler) return res.error(new Error(\"No matching route handler\"));\n\n    try {\n      await handler({ ...req, params }, res);\n    }\n    catch (err) {\n      res.error(err);\n    }\n  }\n\n  const saab: Saab = {\n    use(path, handler) {\n      addHandler(null, path, handler);\n    },\n    get(path, handler) {\n      addHandler(\"get\", path, handler);\n    },\n    post(path, handler) {\n      addHandler(\"post\", path, handler);\n    },\n    patch(path, handler) {\n      addHandler(\"patch\", path, handler);\n    },\n    put(path, handler) {\n      addHandler(\"put\", path, handler);\n    },\n    delete(path, handler) {\n      addHandler(\"delete\", path, handler);\n    },\n    listen\n  };\n\n  return saab;\n}","import { Adapter } from \"./types\";\n\n\nexport function ScriptableWebViewAdapter(wv: WebView): Adapter {\n  return {\n    runInContext: js => wv.evaluateJavaScript(js, true),\n  };\n}","import { Adapter } from \"./types\";\n\n\nexport function BrowserAdapter(): Adapter {\n  return {\n    runInContext: js => new Promise((resolve, reject) => {\n      (new Function(\"window\", \"completion\", js))(window, resolve);\n    }),\n  };\n}"],"mappings":"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","names":[]}